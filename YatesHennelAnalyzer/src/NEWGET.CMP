 STRUCTURED PROGRAMMING VERIFICATION WILL USE THE FOLLOWING  7 STRUCTURES
 ------------------------------------------------------------------------

 SIMPLE COLLAPSE                         

 REPEAT                                  

 CASE                                    

 WHILE LOOP                              

 IF THEN                                 

 IF THEN ELSE                            

 FOR LOOP                                





                                  *****************************************************
                                  *****************************************************
                                  **                                                 **
                                  **                                                 **
                                  **             COMPLEXITY ANALYSIS FOR             **
                                  **                                                 **
                                  **                                                 **
                                  **                 PROCEDURE *MAIN                 **
                                  **                                                 **
                                  **                                                 **
                                  *****************************************************
                                  *****************************************************





 LIST OF KNOTS
 -------------

 =======================================================
  FROM   TO    FROM   TO     DOWN-DOWN  UP-DOWN    UP-UP
 =======================================================

    30   36      35   44         T
    46  101     100   44                   T
    52   57      56  100         T
    60   66      65   99         T
    69   75      74   98         T
    80   84      83   96         T
    87   92      91   95         T
   104  109     108  123         T
   114  119     118  122         T

 -------------------------------------------------------

 TOTAL NUMBER OF KNOTS     =    9

 NUMBER OF DOWN-DOWN KNOTS =    8
 NUMBER OF UP-DOWN KNOTS   =    1
 NUMBER OF UP-UP KNOTS     =    0

 BASIC BLOCK DISPLAY
 -------------------

 =======================================================================================================================
  LINE                                                                                                       BASIC BLOCK
 NUMBER                                                 STATEMENT                                                 NUMBER
 =======================================================================================================================

    20  begin                                                                                                          1
    21    read ( kbdn ) ;                                                                                              1
    22    if                                                                                                           1
    23       ( kbdn <= 0 )                                                                                             1
    24    then                                                                                                         1

 -----------------------------------------------------------------------------------------------------------------------

    25     begin                                                                                                       2
    26       kbdnext := 1 ;                                                                                            2
    27       done := false ;                                                                                           2
    28       if                                                                                                        2
    29          ( kbdn = - 2 )                                                                                         2
    30       then                                                                                                      2

 -----------------------------------------------------------------------------------------------------------------------

    31        begin                                                                                                    3
    32          readln ;                                                                                               3
    33          kbdn := 0                                                                                              3
    34        end                                                                                                      3
    35       else                                                                                                      3

 -----------------------------------------------------------------------------------------------------------------------

    36        BEGIN                                                                                                    4
    37          if                                                                                                     4
    38             ( kbdn < 0 )                                                                                        4
    39          then                                                                                                   4

 -----------------------------------------------------------------------------------------------------------------------

    40           BEGIN                                                                                                 5
    41             done := true                                                                                        5
    42           END                                                                                                   5

 -----------------------------------------------------------------------------------------------------------------------

    43        END ;                                                                                                    6

 -----------------------------------------------------------------------------------------------------------------------

    44       while                                                                                                     7
    45          ( not done )                                                                                           7
    46       do                                                                                                        7

 -----------------------------------------------------------------------------------------------------------------------

    47        begin                                                                                                    8
    48          kbdn := kbdn + 1 ;                                                                                     8
    49          done := true ;                                                                                         8
    50          if                                                                                                     8
    51             ( eof )                                                                                             8
    52          then                                                                                                   8

 -----------------------------------------------------------------------------------------------------------------------

    53           BEGIN                                                                                                 9
    54             kbdn := - 1                                                                                         9
    55           END                                                                                                   9
    56          else                                                                                                   9

 -----------------------------------------------------------------------------------------------------------------------

    57           BEGIN                                                                                                10
    58             if                                                                                                 10
    59                ( eoln )                                                                                        10
    60             then                                                                                               10

 -----------------------------------------------------------------------------------------------------------------------

    61              begin                                                                                             11
    62                kbdn := kbdn - 1 ;                                                                              11
    63                kbdline [ kbdn ] := NEWLINE ;                                                                   11
    64              end                                                                                               11
    65             else                                                                                               11

 -----------------------------------------------------------------------------------------------------------------------

    66              BEGIN                                                                                             12
    67                if                                                                                              12
    68                   ( MAXSTR - 1 <= kbdn )                                                                       12
    69                then                                                                                            12

 -----------------------------------------------------------------------------------------------------------------------

    70                 begin                                                                                          13
    71                   writeln ( 'line too long' ) ;                                                                13
    72                   kbdline [ kbdn ] := NEWLINE                                                                  13
    73                 end                                                                                            13
    74                else                                                                                            13

 -----------------------------------------------------------------------------------------------------------------------

    75                 begin                                                                                          14
    76                   read ( ch ) ;                                                                                14
    77                   kbdline [ kbdn ] := ord ( ch ) ;                                                             14
    78                   if                                                                                           14
    79                      ( kbdline [ kbdn ] <> BACKSPACE )                                                         14
    80                   then                                                                                         14

 -----------------------------------------------------------------------------------------------------------------------

    81                    BEGIN                                                                                       15
    82                    END                                                                                         15
    83                   else                                                                                         15

 -----------------------------------------------------------------------------------------------------------------------

    84                    BEGIN                                                                                       16
    85                      if                                                                                        16
    86                         ( 1 < kbdn )                                                                           16
    87                      then                                                                                      16

 -----------------------------------------------------------------------------------------------------------------------

    88                       BEGIN                                                                                    17
    89                         kbdn := kbdn - 2                                                                       17
    90                       END                                                                                      17
    91                      else                                                                                      17

 -----------------------------------------------------------------------------------------------------------------------

    92                       BEGIN                                                                                    18
    93                         kbdn := kbdn - 1                                                                       18
    94                       END                                                                                      18

 -----------------------------------------------------------------------------------------------------------------------

    95                    END ;                                                                                       19

 -----------------------------------------------------------------------------------------------------------------------

    96                   done := false                                                                                20
    97                 end                                                                                            20

 -----------------------------------------------------------------------------------------------------------------------

    98              END                                                                                               21

 -----------------------------------------------------------------------------------------------------------------------

    99           END                                                                                                  22

 -----------------------------------------------------------------------------------------------------------------------

   100        end                                                                                                     23

 -----------------------------------------------------------------------------------------------------------------------

   101     end ;                                                                                                      24

 -----------------------------------------------------------------------------------------------------------------------

   102    if                                                                                                          25
   103       ( kbdn <= 0 )                                                                                            25
   104    then                                                                                                        25

 -----------------------------------------------------------------------------------------------------------------------

   105     BEGIN                                                                                                      26
   106       c := ENDFILE                                                                                             26
   107     END                                                                                                        26
   108    else                                                                                                        26

 -----------------------------------------------------------------------------------------------------------------------

   109     begin                                                                                                      27
   110       c := kbdline [ kbdnext ] ;                                                                               27
   111       kbdnext := kbdnext + 1 ;                                                                                 27
   112       if                                                                                                       27
   113          ( c = NEWLINE )                                                                                       27
   114       then                                                                                                     27

 -----------------------------------------------------------------------------------------------------------------------

   115        BEGIN                                                                                                   28
   116          kbdn := - 2                                                                                           28
   117        END                                                                                                     28
   118       else                                                                                                     28

 -----------------------------------------------------------------------------------------------------------------------

   119        BEGIN                                                                                                   29
   120          kbdn := kbdn - 1                                                                                      29
   121        END                                                                                                     29

 -----------------------------------------------------------------------------------------------------------------------

   122     end ;                                                                                                      30

 -----------------------------------------------------------------------------------------------------------------------

   123  end .                                                                                                         31





 AVERAGE LENGTH OF BASIC BLOCK =  3.35 EXECUTABLE LINES


 PROCEDURE ENTRY AT BASIC BLOCK    1

 PROCEDURE EXIT  AT BASIC BLOCK   31





 KNOTS
 -----

 ===============================================================================
  FROM       TO        FROM       TO          FROM       TO        FROM       TO
 BLOCK    BLOCK       BLOCK    BLOCK          LINE     LINE        LINE     LINE
 ===============================================================================

     2        4           3        7            30       36          35       44
     7       24          23        7            46      101         100       44
     8       10           9       23            52       57          56      100
    10       12          11       22            60       66          65       99
    12       14          13       21            69       75          74       98
    14       16          15       20            80       84          83       96
    16       18          17       19            87       92          91       95
    25       27          26       31           104      109         108      123
    27       29          28       30           114      119         118      122





 NUMBER OF BLOCK CONNECTIONS  =   41
 NUMBER OF BLOCKS             =   31

 COMPLEXITY MEASURE OF MCCABE =   12
 ***********************************

 NUMBER OF KNOTS              =    9
 ***********************************

 INTERVAL ANALYSIS
 -----------------





 INTERVALS OF ORDER    1
 -----------------------



 HEADER BLOCK       1
 INTERVAL BLOCKS    1    2    3    4    5    6
 EXIT BLOCK(S)      1    3


 HEADER BLOCK       7 ( HEAD OF LOOP )
 INTERVAL BLOCKS    7    8   24    9   10   11   12   13   14   15   16   17
                   18   19   20   21   22   23
 EXIT BLOCK        24


 HEADER BLOCK      25
 INTERVAL BLOCKS   25   26   27   28   29   30   31
 EXIT BLOCK        31


 NUMBER OF INTERVALS =    3
 AVERAGE LENGTH OF INTERVAL = 10.33 BLOCKS





 INTERVALS OF ORDER    2
 -----------------------



 HEADER BLOCK       1
 INTERVAL BLOCKS    1    7   25
 EXIT BLOCK        25


 NUMBER OF INTERVALS =    1
 AVERAGE LENGTH OF INTERVAL =  3.00 BLOCKS


 PROCEDURE REDUCIBLE IN THE INTERVAL SENSE
 *****************************************

 STRUCTURED PROGRAMMING VERIFICATION
 -----------------------------------





 ----- CONNECTION DISPLAY -----

 BLOCK    1 CONNECTS TO BLOCKS    2   25
 BLOCK    2 CONNECTS TO BLOCKS    3    4
 BLOCK    3 CONNECTS TO BLOCKS    7
 BLOCK    4 CONNECTS TO BLOCKS    5    6
 BLOCK    5 CONNECTS TO BLOCKS    6
 BLOCK    6 CONNECTS TO BLOCKS    7
 BLOCK    7 CONNECTS TO BLOCKS    8   24
 BLOCK    8 CONNECTS TO BLOCKS    9   10
 BLOCK    9 CONNECTS TO BLOCKS   23
 BLOCK   10 CONNECTS TO BLOCKS   11   12
 BLOCK   11 CONNECTS TO BLOCKS   22
 BLOCK   12 CONNECTS TO BLOCKS   13   14
 BLOCK   13 CONNECTS TO BLOCKS   21
 BLOCK   14 CONNECTS TO BLOCKS   15   16
 BLOCK   15 CONNECTS TO BLOCKS   20
 BLOCK   16 CONNECTS TO BLOCKS   17   18
 BLOCK   17 CONNECTS TO BLOCKS   19
 BLOCK   18 CONNECTS TO BLOCKS   19
 BLOCK   19 CONNECTS TO BLOCKS   20
 BLOCK   20 CONNECTS TO BLOCKS   21
 BLOCK   21 CONNECTS TO BLOCKS   22
 BLOCK   22 CONNECTS TO BLOCKS   23
 BLOCK   23 CONNECTS TO BLOCKS    7
 BLOCK   24 CONNECTS TO BLOCKS   25
 BLOCK   25 CONNECTS TO BLOCKS   26   27
 BLOCK   26 CONNECTS TO BLOCKS   31
 BLOCK   27 CONNECTS TO BLOCKS   28   29
 BLOCK   28 CONNECTS TO BLOCKS   30
 BLOCK   29 CONNECTS TO BLOCKS   30
 BLOCK   30 CONNECTS TO BLOCKS   31



 THE LINES OF CODE CONTAINED IN EACH BLOCK ARE

 BLOCK    1 CONTAINS LINES   20 TO   24    -   BLOCK    1
 BLOCK    2 CONTAINS LINES   25 TO   30    -   BLOCK    2
 BLOCK    3 CONTAINS LINES   31 TO   35    -   BLOCK    3
 BLOCK    4 CONTAINS LINES   36 TO   39    -   BLOCK    4
 BLOCK    5 CONTAINS LINES   40 TO   42    -   BLOCK    5
 BLOCK    6 CONTAINS LINES   43 TO   43    -   BLOCK    6
 BLOCK    7 CONTAINS LINES   44 TO   46    -   BLOCK    7
 BLOCK    8 CONTAINS LINES   47 TO   52    -   BLOCK    8
 BLOCK    9 CONTAINS LINES   53 TO   56    -   BLOCK    9
 BLOCK   10 CONTAINS LINES   57 TO   60    -   BLOCK   10
 BLOCK   11 CONTAINS LINES   61 TO   65    -   BLOCK   11
 BLOCK   12 CONTAINS LINES   66 TO   69    -   BLOCK   12
 BLOCK   13 CONTAINS LINES   70 TO   74    -   BLOCK   13
 BLOCK   14 CONTAINS LINES   75 TO   80    -   BLOCK   14
 BLOCK   15 CONTAINS LINES   81 TO   83    -   BLOCK   15
 BLOCK   16 CONTAINS LINES   84 TO   87    -   BLOCK   16
 BLOCK   17 CONTAINS LINES   88 TO   91    -   BLOCK   17
 BLOCK   18 CONTAINS LINES   92 TO   94    -   BLOCK   18
 BLOCK   19 CONTAINS LINES   95 TO   95    -   BLOCK   19
 BLOCK   20 CONTAINS LINES   96 TO   97    -   BLOCK   20
 BLOCK   21 CONTAINS LINES   98 TO   98    -   BLOCK   21
 BLOCK   22 CONTAINS LINES   99 TO   99    -   BLOCK   22
 BLOCK   23 CONTAINS LINES  100 TO  100    -   BLOCK   23
 BLOCK   24 CONTAINS LINES  101 TO  101    -   BLOCK   24
 BLOCK   25 CONTAINS LINES  102 TO  104    -   BLOCK   25
 BLOCK   26 CONTAINS LINES  105 TO  108    -   BLOCK   26
 BLOCK   27 CONTAINS LINES  109 TO  114    -   BLOCK   27
 BLOCK   28 CONTAINS LINES  115 TO  118    -   BLOCK   28
 BLOCK   29 CONTAINS LINES  119 TO  121    -   BLOCK   29
 BLOCK   30 CONTAINS LINES  122 TO  122    -   BLOCK   30
 BLOCK   31 CONTAINS LINES  123 TO  123    -   BLOCK   31





 ----- STRUCTURED CODE FOUND -----

 IF THEN ELSE                            
                      FORMED OF BLOCKS   27   28   29   30
       THE FOLLOWING BLOCKS ARE MERGED   27   28   29

 IF THEN ELSE                            
                      FORMED OF BLOCKS   16   17   18   19
       THE FOLLOWING BLOCKS ARE MERGED   16   17   18

 IF THEN                                 
                      FORMED OF BLOCKS    4    5    6
       THE FOLLOWING BLOCKS ARE MERGED    4    5





 ----- CONNECTION DISPLAY -----

 BLOCK    1 CONNECTS TO BLOCKS    2   25
 BLOCK    2 CONNECTS TO BLOCKS    3    4
 BLOCK    3 CONNECTS TO BLOCKS    7
 BLOCK    4 CONNECTS TO BLOCKS    6
 BLOCK    6 CONNECTS TO BLOCKS    7
 BLOCK    7 CONNECTS TO BLOCKS    8   24
 BLOCK    8 CONNECTS TO BLOCKS    9   10
 BLOCK    9 CONNECTS TO BLOCKS   23
 BLOCK   10 CONNECTS TO BLOCKS   11   12
 BLOCK   11 CONNECTS TO BLOCKS   22
 BLOCK   12 CONNECTS TO BLOCKS   13   14
 BLOCK   13 CONNECTS TO BLOCKS   21
 BLOCK   14 CONNECTS TO BLOCKS   15   16
 BLOCK   15 CONNECTS TO BLOCKS   20
 BLOCK   16 CONNECTS TO BLOCKS   19
 BLOCK   19 CONNECTS TO BLOCKS   20
 BLOCK   20 CONNECTS TO BLOCKS   21
 BLOCK   21 CONNECTS TO BLOCKS   22
 BLOCK   22 CONNECTS TO BLOCKS   23
 BLOCK   23 CONNECTS TO BLOCKS    7
 BLOCK   24 CONNECTS TO BLOCKS   25
 BLOCK   25 CONNECTS TO BLOCKS   26   27
 BLOCK   26 CONNECTS TO BLOCKS   31
 BLOCK   27 CONNECTS TO BLOCKS   30
 BLOCK   30 CONNECTS TO BLOCKS   31



 THE LINES OF CODE CONTAINED IN EACH BLOCK ARE

 BLOCK    1 CONTAINS LINES   20 TO   24    -   BLOCK    1
 BLOCK    2 CONTAINS LINES   25 TO   30    -   BLOCK    2
 BLOCK    3 CONTAINS LINES   31 TO   35    -   BLOCK    3
 BLOCK    4 CONTAINS LINES   36 TO   42    -  BLOCKS    4 TO    5
 BLOCK    6 CONTAINS LINES   43 TO   43    -   BLOCK    6
 BLOCK    7 CONTAINS LINES   44 TO   46    -   BLOCK    7
 BLOCK    8 CONTAINS LINES   47 TO   52    -   BLOCK    8
 BLOCK    9 CONTAINS LINES   53 TO   56    -   BLOCK    9
 BLOCK   10 CONTAINS LINES   57 TO   60    -   BLOCK   10
 BLOCK   11 CONTAINS LINES   61 TO   65    -   BLOCK   11
 BLOCK   12 CONTAINS LINES   66 TO   69    -   BLOCK   12
 BLOCK   13 CONTAINS LINES   70 TO   74    -   BLOCK   13
 BLOCK   14 CONTAINS LINES   75 TO   80    -   BLOCK   14
 BLOCK   15 CONTAINS LINES   81 TO   83    -   BLOCK   15
 BLOCK   16 CONTAINS LINES   84 TO   94    -  BLOCKS   16 TO   18
 BLOCK   19 CONTAINS LINES   95 TO   95    -   BLOCK   19
 BLOCK   20 CONTAINS LINES   96 TO   97    -   BLOCK   20
 BLOCK   21 CONTAINS LINES   98 TO   98    -   BLOCK   21
 BLOCK   22 CONTAINS LINES   99 TO   99    -   BLOCK   22
 BLOCK   23 CONTAINS LINES  100 TO  100    -   BLOCK   23
 BLOCK   24 CONTAINS LINES  101 TO  101    -   BLOCK   24
 BLOCK   25 CONTAINS LINES  102 TO  104    -   BLOCK   25
 BLOCK   26 CONTAINS LINES  105 TO  108    -   BLOCK   26
 BLOCK   27 CONTAINS LINES  109 TO  121    -  BLOCKS   27 TO   29
 BLOCK   30 CONTAINS LINES  122 TO  122    -   BLOCK   30
 BLOCK   31 CONTAINS LINES  123 TO  123    -   BLOCK   31





 ----- STRUCTURED CODE FOUND -----

 SIMPLE COLLAPSE                         
                      FORMED OF BLOCKS   27   30
       THE FOLLOWING BLOCKS ARE MERGED   27   30

 IF THEN ELSE                            
                      FORMED OF BLOCKS   25   26   27   31
       THE FOLLOWING BLOCKS ARE MERGED   25   26   27

 SIMPLE COLLAPSE                         
                      FORMED OF BLOCKS   16   19
       THE FOLLOWING BLOCKS ARE MERGED   16   19

 IF THEN ELSE                            
                      FORMED OF BLOCKS   14   15   16   20
       THE FOLLOWING BLOCKS ARE MERGED   14   15   16

 SIMPLE COLLAPSE                         
                      FORMED OF BLOCKS    4    6
       THE FOLLOWING BLOCKS ARE MERGED    4    6

 IF THEN ELSE                            
                      FORMED OF BLOCKS    2    3    4    7
       THE FOLLOWING BLOCKS ARE MERGED    2    3    4





 ----- CONNECTION DISPLAY -----

 BLOCK    1 CONNECTS TO BLOCKS    2   25
 BLOCK    2 CONNECTS TO BLOCKS    7
 BLOCK    7 CONNECTS TO BLOCKS    8   24
 BLOCK    8 CONNECTS TO BLOCKS    9   10
 BLOCK    9 CONNECTS TO BLOCKS   23
 BLOCK   10 CONNECTS TO BLOCKS   11   12
 BLOCK   11 CONNECTS TO BLOCKS   22
 BLOCK   12 CONNECTS TO BLOCKS   13   14
 BLOCK   13 CONNECTS TO BLOCKS   21
 BLOCK   14 CONNECTS TO BLOCKS   20
 BLOCK   20 CONNECTS TO BLOCKS   21
 BLOCK   21 CONNECTS TO BLOCKS   22
 BLOCK   22 CONNECTS TO BLOCKS   23
 BLOCK   23 CONNECTS TO BLOCKS    7
 BLOCK   24 CONNECTS TO BLOCKS   25
 BLOCK   25 CONNECTS TO BLOCKS   31



 THE LINES OF CODE CONTAINED IN EACH BLOCK ARE

 BLOCK    1 CONTAINS LINES   20 TO   24    -   BLOCK    1
 BLOCK    2 CONTAINS LINES   25 TO   43    -  BLOCKS    2 TO    6
 BLOCK    7 CONTAINS LINES   44 TO   46    -   BLOCK    7
 BLOCK    8 CONTAINS LINES   47 TO   52    -   BLOCK    8
 BLOCK    9 CONTAINS LINES   53 TO   56    -   BLOCK    9
 BLOCK   10 CONTAINS LINES   57 TO   60    -   BLOCK   10
 BLOCK   11 CONTAINS LINES   61 TO   65    -   BLOCK   11
 BLOCK   12 CONTAINS LINES   66 TO   69    -   BLOCK   12
 BLOCK   13 CONTAINS LINES   70 TO   74    -   BLOCK   13
 BLOCK   14 CONTAINS LINES   75 TO   95    -  BLOCKS   14 TO   19
 BLOCK   20 CONTAINS LINES   96 TO   97    -   BLOCK   20
 BLOCK   21 CONTAINS LINES   98 TO   98    -   BLOCK   21
 BLOCK   22 CONTAINS LINES   99 TO   99    -   BLOCK   22
 BLOCK   23 CONTAINS LINES  100 TO  100    -   BLOCK   23
 BLOCK   24 CONTAINS LINES  101 TO  101    -   BLOCK   24
 BLOCK   25 CONTAINS LINES  102 TO  122    -  BLOCKS   25 TO   30
 BLOCK   31 CONTAINS LINES  123 TO  123    -   BLOCK   31





 ----- STRUCTURED CODE FOUND -----

 SIMPLE COLLAPSE                         
                      FORMED OF BLOCKS   25   31
       THE FOLLOWING BLOCKS ARE MERGED   25   31

 SIMPLE COLLAPSE                         
                      FORMED OF BLOCKS   14   20
       THE FOLLOWING BLOCKS ARE MERGED   14   20

 IF THEN ELSE                            
                      FORMED OF BLOCKS   12   13   14   21
       THE FOLLOWING BLOCKS ARE MERGED   12   13   14





 ----- CONNECTION DISPLAY -----

 BLOCK    1 CONNECTS TO BLOCKS    2   25
 BLOCK    2 CONNECTS TO BLOCKS    7
 BLOCK    7 CONNECTS TO BLOCKS    8   24
 BLOCK    8 CONNECTS TO BLOCKS    9   10
 BLOCK    9 CONNECTS TO BLOCKS   23
 BLOCK   10 CONNECTS TO BLOCKS   11   12
 BLOCK   11 CONNECTS TO BLOCKS   22
 BLOCK   12 CONNECTS TO BLOCKS   21
 BLOCK   21 CONNECTS TO BLOCKS   22
 BLOCK   22 CONNECTS TO BLOCKS   23
 BLOCK   23 CONNECTS TO BLOCKS    7
 BLOCK   24 CONNECTS TO BLOCKS   25



 THE LINES OF CODE CONTAINED IN EACH BLOCK ARE

 BLOCK    1 CONTAINS LINES   20 TO   24    -   BLOCK    1
 BLOCK    2 CONTAINS LINES   25 TO   43    -  BLOCKS    2 TO    6
 BLOCK    7 CONTAINS LINES   44 TO   46    -   BLOCK    7
 BLOCK    8 CONTAINS LINES   47 TO   52    -   BLOCK    8
 BLOCK    9 CONTAINS LINES   53 TO   56    -   BLOCK    9
 BLOCK   10 CONTAINS LINES   57 TO   60    -   BLOCK   10
 BLOCK   11 CONTAINS LINES   61 TO   65    -   BLOCK   11
 BLOCK   12 CONTAINS LINES   66 TO   97    -  BLOCKS   12 TO   20
 BLOCK   21 CONTAINS LINES   98 TO   98    -   BLOCK   21
 BLOCK   22 CONTAINS LINES   99 TO   99    -   BLOCK   22
 BLOCK   23 CONTAINS LINES  100 TO  100    -   BLOCK   23
 BLOCK   24 CONTAINS LINES  101 TO  101    -   BLOCK   24
 BLOCK   25 CONTAINS LINES  102 TO  123    -  BLOCKS   25 TO   31





 ----- STRUCTURED CODE FOUND -----

 SIMPLE COLLAPSE                         
                      FORMED OF BLOCKS   12   21
       THE FOLLOWING BLOCKS ARE MERGED   12   21

 IF THEN ELSE                            
                      FORMED OF BLOCKS   10   11   12   22
       THE FOLLOWING BLOCKS ARE MERGED   10   11   12





 ----- CONNECTION DISPLAY -----

 BLOCK    1 CONNECTS TO BLOCKS    2   25
 BLOCK    2 CONNECTS TO BLOCKS    7
 BLOCK    7 CONNECTS TO BLOCKS    8   24
 BLOCK    8 CONNECTS TO BLOCKS    9   10
 BLOCK    9 CONNECTS TO BLOCKS   23
 BLOCK   10 CONNECTS TO BLOCKS   22
 BLOCK   22 CONNECTS TO BLOCKS   23
 BLOCK   23 CONNECTS TO BLOCKS    7
 BLOCK   24 CONNECTS TO BLOCKS   25



 THE LINES OF CODE CONTAINED IN EACH BLOCK ARE

 BLOCK    1 CONTAINS LINES   20 TO   24    -   BLOCK    1
 BLOCK    2 CONTAINS LINES   25 TO   43    -  BLOCKS    2 TO    6
 BLOCK    7 CONTAINS LINES   44 TO   46    -   BLOCK    7
 BLOCK    8 CONTAINS LINES   47 TO   52    -   BLOCK    8
 BLOCK    9 CONTAINS LINES   53 TO   56    -   BLOCK    9
 BLOCK   10 CONTAINS LINES   57 TO   98    -  BLOCKS   10 TO   21
 BLOCK   22 CONTAINS LINES   99 TO   99    -   BLOCK   22
 BLOCK   23 CONTAINS LINES  100 TO  100    -   BLOCK   23
 BLOCK   24 CONTAINS LINES  101 TO  101    -   BLOCK   24
 BLOCK   25 CONTAINS LINES  102 TO  123    -  BLOCKS   25 TO   31





 ----- STRUCTURED CODE FOUND -----

 SIMPLE COLLAPSE                         
                      FORMED OF BLOCKS   10   22
       THE FOLLOWING BLOCKS ARE MERGED   10   22

 IF THEN ELSE                            
                      FORMED OF BLOCKS    8    9   10   23
       THE FOLLOWING BLOCKS ARE MERGED    8    9   10





 ----- CONNECTION DISPLAY -----

 BLOCK    1 CONNECTS TO BLOCKS    2   25
 BLOCK    2 CONNECTS TO BLOCKS    7
 BLOCK    7 CONNECTS TO BLOCKS    8   24
 BLOCK    8 CONNECTS TO BLOCKS   23
 BLOCK   23 CONNECTS TO BLOCKS    7
 BLOCK   24 CONNECTS TO BLOCKS   25



 THE LINES OF CODE CONTAINED IN EACH BLOCK ARE

 BLOCK    1 CONTAINS LINES   20 TO   24    -   BLOCK    1
 BLOCK    2 CONTAINS LINES   25 TO   43    -  BLOCKS    2 TO    6
 BLOCK    7 CONTAINS LINES   44 TO   46    -   BLOCK    7
 BLOCK    8 CONTAINS LINES   47 TO   99    -  BLOCKS    8 TO   22
 BLOCK   23 CONTAINS LINES  100 TO  100    -   BLOCK   23
 BLOCK   24 CONTAINS LINES  101 TO  101    -   BLOCK   24
 BLOCK   25 CONTAINS LINES  102 TO  123    -  BLOCKS   25 TO   31





 ----- STRUCTURED CODE FOUND -----

 SIMPLE COLLAPSE                         
                      FORMED OF BLOCKS    8   23
       THE FOLLOWING BLOCKS ARE MERGED    8   23

 WHILE LOOP                              
                      FORMED OF BLOCKS    7    8   24
       THE FOLLOWING BLOCKS ARE MERGED    7    8

 SIMPLE COLLAPSE                         
                      FORMED OF BLOCKS    2    7
       THE FOLLOWING BLOCKS ARE MERGED    2    7

 SIMPLE COLLAPSE                         
                      FORMED OF BLOCKS    2   24
       THE FOLLOWING BLOCKS ARE MERGED    2   24

 IF THEN                                 
                      FORMED OF BLOCKS    1    2   25
       THE FOLLOWING BLOCKS ARE MERGED    1    2





 ----- CONNECTION DISPLAY -----

 BLOCK    1 CONNECTS TO BLOCKS   25



 THE LINES OF CODE CONTAINED IN EACH BLOCK ARE

 BLOCK    1 CONTAINS LINES   20 TO  101    -  BLOCKS    1 TO   24
 BLOCK   25 CONTAINS LINES  102 TO  123    -  BLOCKS   25 TO   31





 ----- STRUCTURED CODE FOUND -----

 SIMPLE COLLAPSE                         
                      FORMED OF BLOCKS    1   25
       THE FOLLOWING BLOCKS ARE MERGED    1   25





 STRUCTURE REDUCED TO 1 BLOCK





 ESSENTIAL KNOTS =    0
 **********************

 ESSENTIAL COMPLEXITY OF MCCABE =    1
 *************************************


 PROCEDURE STRUCTURED
 ********************

 =====================================================================================================================
                  EXECUTABLE     BASIC   AVERAGE   ORDER 1 MAX ORDER                               ESSENTIAL ESSENTIAL
 PROCEDURE             LINES    BLOCKS    LENGTH INTERVALS INTERVALS REDUCIBLE    MCCABE     KNOTS    MCCABE     KNOTS
 =====================================================================================================================

 *MAIN                  104        31      3.35         3         2       YES        12         9         1         0

 ---------------------------------------------------------------------------------------------------------------------

 TOTAL FOR PROGRAM      104        31      3.35         3         2       YES        12         9         1         0





 =========================================================
                                           TOTAL MAX DEPTH
 PROCEDURE           ENTRIES     EXITS     LOOPS     LOOPS
 =========================================================

 *MAIN                    1         1         1         1

 ---------------------------------------------------------

 TOTAL FOR PROGRAM        1         1         1         1





 THE PROGRAM CONTAINS    1 PROCEDURES


 THE ESSENTIAL MCCABE MEASURE OF 1 INDICATES THAT THE PROGRAM IS WELL STRUCTURED
